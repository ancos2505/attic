name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  icx-cert:
    env:
      BINARY_NAME: icx-cert
    runs-on: ubuntu-latest
    steps:
      - name: pre-install
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential musl-tools
          rustup target add x86_64-unknown-linux-musl

      - name: install
        run: cargo install ${{ env.BINARY_NAME }} --target x86_64-unknown-linux-musl
    
      - name: post-install
        run: |
          strip ~/.cargo/bin/${{ env.BINARY_NAME }}
      
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BINARY_NAME }}
          path: ~/.cargo/bin/${{ env.BINARY_NAME }}

  icx-asset:
    env:
      BINARY_NAME: icx-asset
    runs-on: ubuntu-latest
    steps:
      - name: pre-install
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential musl-tools
          rustup target add x86_64-unknown-linux-musl

      - name: install
        run: cargo install ${{ env.BINARY_NAME }} --target x86_64-unknown-linux-musl
    
      - name: post-install
        run: |
          strip ~/.cargo/bin/${{ env.BINARY_NAME }}
      
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BINARY_NAME }}
          path: ~/.cargo/bin/${{ env.BINARY_NAME }}

  icx-proxy:
    env:
      BINARY_NAME: icx-proxy
    runs-on: ubuntu-latest
    steps:
      - name: pre-install
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential musl-tools
          rustup target add x86_64-unknown-linux-musl

      - name: install
        run: cargo install ${{ env.BINARY_NAME }} --target x86_64-unknown-linux-musl
    
      - name: post-install
        run: |
          strip ~/.cargo/bin/${{ env.BINARY_NAME }}
      
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BINARY_NAME }}
          path: ~/.cargo/bin/${{ env.BINARY_NAME }}